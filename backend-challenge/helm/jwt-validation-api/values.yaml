# Configurações para jwt-validation-api
replicaCount: 2

image:
  repository: bapadua/backend-api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Especifica se uma service account deve ser criada
  create: true
  # Anotações para adicionar à service account
  annotations: {}
  # Nome da service account a ser usada
  # Se não for definido e create for true, um nome será gerado usando o template fullname
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1001
  runAsNonRoot: true
  runAsUser: 1001

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1001
  allowPrivilegeEscalation: false

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

ingress:
  enabled: false
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: jwt-api.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: jwt-api-tls
  #    hosts:
  #      - jwt-api.local

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

nodeSelector:
  kubernetes.io/os: linux

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - jwt-validation-api
        topologyKey: kubernetes.io/hostname

# Configurações da aplicação
app:
  port: 8080
  springProfiles: "docker"
  javaOpts: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75 -XX:+UseG1GC -XX:+UseStringDeduplication"

# Health checks
healthcheck:
  enabled: true
  livenessProbe:
    httpGet:
      path: /actuator/health
      port: http
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: /actuator/health
      port: http
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

# ServiceMonitor para Prometheus (opcional)
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    namespace: ""
    labels: {}
    interval: 30s
    path: /actuator/prometheus 