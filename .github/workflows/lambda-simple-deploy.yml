name: Simple Lambda Deploy

on:
  push:
    paths:
      - 'aws-lambda-jwt/**'
      - 'jwt-validation-lib/**'
    branches: [ main ]
  workflow_dispatch:  # Permite execu√ß√£o manual

env:
  JAVA_VERSION: '21'
  AWS_REGION: us-east-1
  LAMBDA_FUNCTION_NAME: jwt-validator

jobs:
  deploy:
    name: Build and Deploy Lambda
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Build JWT Validation Library
      run: |
        cd jwt-validation-lib
        mvn clean install -DskipTests -B
        
    - name: Build Lambda package
      run: |
        cd aws-lambda-jwt
        mvn clean package -DskipTests -B
        
        # Lista os arquivos criados
        echo "üì¶ Arquivos criados:"
        ls -la target/
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Deploy to Lambda
      run: |
        cd aws-lambda-jwt
        
        # Encontra o JAR criado
        LAMBDA_JAR=$(ls target/aws-lambda-jwt-*.jar | head -n 1)
        echo "üöÄ Deploying: $LAMBDA_JAR"
        
        # Update Lambda function code
        aws lambda update-function-code \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --zip-file fileb://$LAMBDA_JAR
          
        # Wait for update to complete
        aws lambda wait function-updated \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }}
          
        echo "‚úÖ Lambda deployed successfully!"
        
    - name: Test Lambda function
      run: |
        echo "üß™ Testing Lambda function..."
        
        # Test with sample JWT
        aws lambda invoke \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --payload '{"token": "test-jwt-token", "test": true}' \
          response.json
          
        echo "üìã Lambda response:"
        cat response.json
        
    - name: Get Function URL
      run: |
        echo "üåê Getting Function URL..."
        FUNCTION_URL=$(aws lambda get-function-url-config \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --query 'FunctionUrl' --output text)
          
        echo "üîó Function URL: $FUNCTION_URL"
        
        # Test via HTTP
        echo "üß™ Testing via HTTP..."
        curl -X POST "$FUNCTION_URL" \
          -H "Content-Type: application/json" \
          -d '{"token": "test-jwt-token", "test": true}' \
          || echo "‚ùå HTTP test failed (expected for placeholder code)" 