name: JWT Validation Library CI/CD

on:
  push:
    paths:
      - 'jwt-validation-lib/**'
      - 'pom.xml'
    branches: [ main, develop ]
  pull_request:
    paths:
      - 'jwt-validation-lib/**'
      - 'pom.xml'
    branches: [ main ]

env:
  JAVA_VERSION: '21'
  MAVEN_OPTS: -Xmx2048m

jobs:
  test:
    name: Test Library
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run tests
      run: |
        cd jwt-validation-lib
        mvn clean test -B
        
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: JWT Library Tests
        path: jwt-validation-lib/target/surefire-reports/*.xml
        reporter: java-junit
        
    - name: Upload coverage to Codecov
      if: success()
      uses: codecov/codecov-action@v3
      with:
        file: jwt-validation-lib/target/site/jacoco/jacoco.xml
        flags: jwt-validation-lib
        name: jwt-validation-lib-coverage

  build-and-publish:
    name: Build and Publish Library
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Build and install library
      run: |
        cd jwt-validation-lib
        mvn clean install -DskipTests -B
        
    - name: Upload library artifact
      uses: actions/upload-artifact@v4
      with:
        name: jwt-validation-lib
        path: jwt-validation-lib/target/*.jar
        retention-days: 30
        
    - name: Create release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: JWT Validation Library ${{ github.ref }}
        draft: false
        prerelease: false 